# Jira MCP Server with OAuth - Environment Configuration
# Copy this to .env and update the values

# =============================================================================
# SERVER CONFIGURATION
# =============================================================================

# Your deployed server URL (REQUIRED for OAuth redirects)
# For local development: http://localhost:3000
# For production: https://your-domain.com
SERVER_URL=http://localhost:3000

# Server port (optional, defaults to 3000)
PORT=3000

# =============================================================================
# OAUTH CONFIGURATION (Individual User Authentication)
# =============================================================================

# OAuth Client ID (OPTIONAL - defaults provided for individual users)
# Get this from https://developer.atlassian.com/console/myapps/ if you want your own OAuth app
# JIRA_OAUTH_CLIENT_ID=your_oauth_client_id

# OAuth Client Secret (OPTIONAL - only needed for confidential clients)
# JIRA_OAUTH_CLIENT_SECRET=your_oauth_client_secret

# =============================================================================
# LEGACY CONFIGURATION (Fallback Support)
# =============================================================================

# API Token for fallback authentication (OPTIONAL)
# Only needed if OAuth fails - get from https://id.atlassian.com/manage-profile/security/api-tokens
# JIRA_API_TOKEN=your_api_token

# =============================================================================
# DEVELOPMENT CONFIGURATION
# =============================================================================

# Enable debug logging (optional)
# DEBUG=jira-mcp:*

# Node environment
NODE_ENV=production

# =============================================================================
# USAGE NOTES
# =============================================================================

# INDIVIDUAL USER SETUP (RECOMMENDED):
# 1. Set SERVER_URL to your deployed domain
# 2. Leave OAuth client settings empty to use defaults
# 3. Users authenticate via browser OAuth flow
# 4. No admin-level tokens required!

# CUSTOM OAUTH APP SETUP (ADVANCED):
# 1. Create OAuth app in Atlassian Developer Console
# 2. Set JIRA_OAUTH_CLIENT_ID and optionally JIRA_OAUTH_CLIENT_SECRET
# 3. Configure redirect URI: ${SERVER_URL}/oauth/callback
# 4. Add required scopes: read:jira-work, write:jira-work, read:jira-user, offline_access

# API TOKEN FALLBACK (NOT RECOMMENDED):
# 1. Set JIRA_API_TOKEN for emergency fallback
# 2. This bypasses OAuth flow but requires manual token management
# 3. Each user needs their own API token

# =============================================================================